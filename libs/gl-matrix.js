! function(t, n) { if ("object" == typeof exports && "object" == typeof module) module.exports = n();
    else if ("function" == typeof define && define.amd) define([], n);
    else { var r, a = n(); for (r in a)("object" == typeof exports ? exports : t)[r] = a[r] } }(this, function() { return r = [function(t, n, r) { "use strict";
        Object.defineProperty(n, "__esModule", { value: !0 }), n.setMatrixArrayType = function(t) { n.ARRAY_TYPE = t }, n.toRadian = function(t) { return t * e }, n.equals = function(t, n) { return Math.abs(t - n) <= a * Math.max(1, Math.abs(t), Math.abs(n)) }; var a = n.EPSILON = 1e-6;
        n.ARRAY_TYPE = "undefined" != typeof Float32Array ? Float32Array : Array, n.RANDOM = Math.random; var e = Math.PI / 180 }, function(t, n, r) { "use strict";
        Object.defineProperty(n, "__esModule", { value: !0 }), n.sub = n.mul = void 0, n.create = function() { var t = new p.ARRAY_TYPE(9); return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 1, t[5] = 0, t[6] = 0, t[7] = 0, t[8] = 1, t }, n.fromMat4 = function(t, n) { return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[4], t[4] = n[5], t[5] = n[6], t[6] = n[8], t[7] = n[9], t[8] = n[10], t }, n.clone = function(t) { var n = new p.ARRAY_TYPE(9); return n[0] = t[0], n[1] = t[1], n[2] = t[2], n[3] = t[3], n[4] = t[4], n[5] = t[5], n[6] = t[6], n[7] = t[7], n[8] = t[8], n }, n.copy = function(t, n) { return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], t }, n.fromValues = function(t, n, r, a, e, u, o, i, s) { var c = new p.ARRAY_TYPE(9); return c[0] = t, c[1] = n, c[2] = r, c[3] = a, c[4] = e, c[5] = u, c[6] = o, c[7] = i, c[8] = s, c }, n.set = function(t, n, r, a, e, u, o, i, s, c) { return t[0] = n, t[1] = r, t[2] = a, t[3] = e, t[4] = u, t[5] = o, t[6] = i, t[7] = s, t[8] = c, t }, n.identity = function(t) { return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 1, t[5] = 0, t[6] = 0, t[7] = 0, t[8] = 1, t }, n.transpose = function(t, n) {
            { var r, a, e;
                t === n ? (r = n[1], a = n[2], e = n[5], t[1] = n[3], t[2] = n[6], t[3] = r, t[5] = n[7], t[6] = a, t[7] = e) : (t[0] = n[0], t[1] = n[3], t[2] = n[6], t[3] = n[1], t[4] = n[4], t[5] = n[7], t[6] = n[2], t[7] = n[5], t[8] = n[8]) } return t }, n.invert = function(t, n) { var r = n[0],
                a = n[1],
                e = n[2],
                u = n[3],
                o = n[4],
                i = n[5],
                s = n[6],
                c = n[7],
                n = n[8],
                M = n * o - i * c,
                h = -n * u + i * s,
                f = c * u - o * s,
                l = r * M + a * h + e * f; return l ? (l = 1 / l, t[0] = M * l, t[1] = (-n * a + e * c) * l, t[2] = (i * a - e * o) * l, t[3] = h * l, t[4] = (n * r - e * s) * l, t[5] = (-i * r + e * u) * l, t[6] = f * l, t[7] = (-c * r + a * s) * l, t[8] = (o * r - a * u) * l, t) : null }, n.adjoint = function(t, n) { var r = n[0],
                a = n[1],
                e = n[2],
                u = n[3],
                o = n[4],
                i = n[5],
                s = n[6],
                c = n[7],
                n = n[8]; return t[0] = o * n - i * c, t[1] = e * c - a * n, t[2] = a * i - e * o, t[3] = i * s - u * n, t[4] = r * n - e * s, t[5] = e * u - r * i, t[6] = u * c - o * s, t[7] = a * s - r * c, t[8] = r * o - a * u, t }, n.determinant = function(t) { var n = t[0],
                r = t[3],
                a = t[4],
                e = t[5],
                u = t[6],
                o = t[7],
                i = t[8]; return n * (i * a - e * o) + t[1] * (-i * r + e * u) + t[2] * (o * r - a * u) }, n.multiply = a, n.translate = function(t, n, r) { var a = n[0],
                e = n[1],
                u = n[2],
                o = n[3],
                i = n[4],
                s = n[5],
                c = n[6],
                M = n[7],
                n = n[8],
                h = r[0],
                r = r[1]; return t[0] = a, t[1] = e, t[2] = u, t[3] = o, t[4] = i, t[5] = s, t[6] = h * a + r * o + c, t[7] = h * e + r * i + M, t[8] = h * u + r * s + n, t }, n.rotate = function(t, n, r) { var a = n[0],
                e = n[1],
                u = n[2],
                o = n[3],
                i = n[4],
                s = n[5],
                c = n[6],
                M = n[7],
                n = n[8],
                h = Math.sin(r),
                r = Math.cos(r); return t[0] = r * a + h * o, t[1] = r * e + h * i, t[2] = r * u + h * s, t[3] = r * o - h * a, t[4] = r * i - h * e, t[5] = r * s - h * u, t[6] = c, t[7] = M, t[8] = n, t }, n.scale = function(t, n, r) { var a = r[0],
                r = r[1]; return t[0] = a * n[0], t[1] = a * n[1], t[2] = a * n[2], t[3] = r * n[3], t[4] = r * n[4], t[5] = r * n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], t }, n.fromTranslation = function(t, n) { return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 1, t[5] = 0, t[6] = n[0], t[7] = n[1], t[8] = 1, t }, n.fromRotation = function(t, n) { var r = Math.sin(n),
                n = Math.cos(n); return t[0] = n, t[1] = r, t[2] = 0, t[3] = -r, t[4] = n, t[5] = 0, t[6] = 0, t[7] = 0, t[8] = 1, t }, n.fromScaling = function(t, n) { return t[0] = n[0], t[1] = 0, t[2] = 0, t[3] = 0, t[4] = n[1], t[5] = 0, t[6] = 0, t[7] = 0, t[8] = 1, t }, n.fromMat2d = function(t, n) { return t[0] = n[0], t[1] = n[1], t[2] = 0, t[3] = n[2], t[4] = n[3], t[5] = 0, t[6] = n[4], t[7] = n[5], t[8] = 1, t }, n.fromQuat = function(t, n) { var r = n[0],
                a = n[1],
                e = n[2],
                n = n[3],
                u = r + r,
                o = a + a,
                i = e + e,
                r = r * u,
                s = a * u,
                a = a * o,
                c = e * u,
                M = e * o,
                e = e * i,
                u = n * u,
                o = n * o,
                n = n * i; return t[0] = 1 - a - e, t[3] = s - n, t[6] = c + o, t[1] = s + n, t[4] = 1 - r - e, t[7] = M - u, t[2] = c - o, t[5] = M + u, t[8] = 1 - r - a, t }, n.normalFromMat4 = function(t, n) { var r = n[0],
                a = n[1],
                e = n[2],
                u = n[3],
                o = n[4],
                i = n[5],
                s = n[6],
                c = n[7],
                M = n[8],
                h = n[9],
                f = n[10],
                l = n[11],
                v = n[12],
                d = n[13],
                b = n[14],
                n = n[15],
                m = r * i - a * o,
                p = r * s - e * o,
                P = r * c - u * o,
                E = a * s - e * i,
                O = a * c - u * i,
                x = e * c - u * s,
                A = M * d - h * v,
                q = M * b - f * v,
                M = M * n - l * v,
                y = h * b - f * d,
                h = h * n - l * d,
                f = f * n - l * b,
                l = m * f - p * h + P * y + E * M - O * q + x * A; return l ? (l = 1 / l, t[0] = (i * f - s * h + c * y) * l, t[1] = (s * M - o * f - c * q) * l, t[2] = (o * h - i * M + c * A) * l, t[3] = (e * h - a * f - u * y) * l, t[4] = (r * f - e * M + u * q) * l, t[5] = (a * M - r * h - u * A) * l, t[6] = (d * x - b * O + n * E) * l, t[7] = (b * P - v * x - n * p) * l, t[8] = (v * O - d * P + n * m) * l, t) : null }, n.projection = function(t, n, r) { return t[0] = 2 / n, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = -2 / r, t[5] = 0, t[6] = -1, t[7] = 1, t[8] = 1, t }, n.str = function(t) { return "mat3(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ", " + t[4] + ", " + t[5] + ", " + t[6] + ", " + t[7] + ", " + t[8] + ")" }, n.frob = function(t) { return Math.sqrt(Math.pow(t[0], 2) + Math.pow(t[1], 2) + Math.pow(t[2], 2) + Math.pow(t[3], 2) + Math.pow(t[4], 2) + Math.pow(t[5], 2) + Math.pow(t[6], 2) + Math.pow(t[7], 2) + Math.pow(t[8], 2)) }, n.add = function(t, n, r) { return t[0] = n[0] + r[0], t[1] = n[1] + r[1], t[2] = n[2] + r[2], t[3] = n[3] + r[3], t[4] = n[4] + r[4], t[5] = n[5] + r[5], t[6] = n[6] + r[6], t[7] = n[7] + r[7], t[8] = n[8] + r[8], t }, n.subtract = e, n.multiplyScalar = function(t, n, r) { return t[0] = n[0] * r, t[1] = n[1] * r, t[2] = n[2] * r, t[3] = n[3] * r, t[4] = n[4] * r, t[5] = n[5] * r, t[6] = n[6] * r, t[7] = n[7] * r, t[8] = n[8] * r, t }, n.multiplyScalarAndAdd = function(t, n, r, a) { return t[0] = n[0] + r[0] * a, t[1] = n[1] + r[1] * a, t[2] = n[2] + r[2] * a, t[3] = n[3] + r[3] * a, t[4] = n[4] + r[4] * a, t[5] = n[5] + r[5] * a, t[6] = n[6] + r[6] * a, t[7] = n[7] + r[7] * a, t[8] = n[8] + r[8] * a, t }, n.exactEquals = function(t, n) { return t[0] === n[0] && t[1] === n[1] && t[2] === n[2] && t[3] === n[3] && t[4] === n[4] && t[5] === n[5] && t[6] === n[6] && t[7] === n[7] && t[8] === n[8] }, n.equals = function(t, n) { var r = t[0],
                a = t[1],
                e = t[2],
                u = t[3],
                o = t[4],
                i = t[5],
                s = t[6],
                c = t[7],
                t = t[8],
                M = n[0],
                h = n[1],
                f = n[2],
                l = n[3],
                v = n[4],
                d = n[5],
                b = n[6],
                m = n[7],
                n = n[8]; return Math.abs(r - M) <= p.EPSILON * Math.max(1, Math.abs(r), Math.abs(M)) && Math.abs(a - h) <= p.EPSILON * Math.max(1, Math.abs(a), Math.abs(h)) && Math.abs(e - f) <= p.EPSILON * Math.max(1, Math.abs(e), Math.abs(f)) && Math.abs(u - l) <= p.EPSILON * Math.max(1, Math.abs(u), Math.abs(l)) && Math.abs(o - v) <= p.EPSILON * Math.max(1, Math.abs(o), Math.abs(v)) && Math.abs(i - d) <= p.EPSILON * Math.max(1, Math.abs(i), Math.abs(d)) && Math.abs(s - b) <= p.EPSILON * Math.max(1, Math.abs(s), Math.abs(b)) && Math.abs(c - m) <= p.EPSILON * Math.max(1, Math.abs(c), Math.abs(m)) && Math.abs(t - n) <= p.EPSILON * Math.max(1, Math.abs(t), Math.abs(n)) }; var p = function(t) {
            { if (t && t.__esModule) return t; var n = {}; if (null != t)
                    for (var r in t) Object.prototype.hasOwnProperty.call(t, r) && (n[r] = t[r]); return n.default = t, n } }(r(0));

        function a(t, n, r) { var a = n[0],
                e = n[1],
                u = n[2],
                o = n[3],
                i = n[4],
                s = n[5],
                c = n[6],
                M = n[7],
                n = n[8],
                h = r[0],
                f = r[1],
                l = r[2],
                v = r[3],
                d = r[4],
                b = r[5],
                m = r[6],
                p = r[7],
                r = r[8]; return t[0] = h * a + f * o + l * c, t[1] = h * e + f * i + l * M, t[2] = h * u + f * s + l * n, t[3] = v * a + d * o + b * c, t[4] = v * e + d * i + b * M, t[5] = v * u + d * s + b * n, t[6] = m * a + p * o + r * c, t[7] = m * e + p * i + r * M, t[8] = m * u + p * s + r * n, t }

        function e(t, n, r) { return t[0] = n[0] - r[0], t[1] = n[1] - r[1], t[2] = n[2] - r[2], t[3] = n[3] - r[3], t[4] = n[4] - r[4], t[5] = n[5] - r[5], t[6] = n[6] - r[6], t[7] = n[7] - r[7], t[8] = n[8] - r[8], t }
        n.mul = a, n.sub = e }, function(t, n, r) { "use strict";
        Object.defineProperty(n, "__esModule", { value: !0 }), n.forEach = n.sqrLen = n.len = n.sqrDist = n.dist = n.div = n.mul = n.sub = void 0, n.create = a, n.clone = function(t) { var n = new o.ARRAY_TYPE(3); return n[0] = t[0], n[1] = t[1], n[2] = t[2], n }, n.length = e, n.fromValues = u, n.copy = function(t, n) { return t[0] = n[0], t[1] = n[1], t[2] = n[2], t }, n.set = function(t, n, r, a) { return t[0] = n, t[1] = r, t[2] = a, t }, n.add = function(t, n, r) { return t[0] = n[0] + r[0], t[1] = n[1] + r[1], t[2] = n[2] + r[2], t }, n.subtract = i, n.multiply = s, n.divide = c, n.ceil = function(t, n) { return t[0] = Math.ceil(n[0]), t[1] = Math.ceil(n[1]), t[2] = Math.ceil(n[2]), t }, n.floor = function(t, n) { return t[0] = Math.floor(n[0]), t[1] = Math.floor(n[1]), t[2] = Math.floor(n[2]), t }, n.min = function(t, n, r) { return t[0] = Math.min(n[0], r[0]), t[1] = Math.min(n[1], r[1]), t[2] = Math.min(n[2], r[2]), t }, n.max = function(t, n, r) { return t[0] = Math.max(n[0], r[0]), t[1] = Math.max(n[1], r[1]), t[2] = Math.max(n[2], r[2]), t }, n.round = function(t, n) { return t[0] = Math.round(n[0]), t[1] = Math.round(n[1]), t[2] = Math.round(n[2]), t }, n.scale = function(t, n, r) { return t[0] = n[0] * r, t[1] = n[1] * r, t[2] = n[2] * r, t }, n.scaleAndAdd = function(t, n, r, a) { return t[0] = n[0] + r[0] * a, t[1] = n[1] + r[1] * a, t[2] = n[2] + r[2] * a, t }, n.distance = M, n.squaredDistance = h, n.squaredLength = f, n.negate = function(t, n) { return t[0] = -n[0], t[1] = -n[1], t[2] = -n[2], t }, n.inverse = function(t, n) { return t[0] = 1 / n[0], t[1] = 1 / n[1], t[2] = 1 / n[2], t }, n.normalize = l, n.dot = v, n.cross = function(t, n, r) { var a = n[0],
                e = n[1],
                n = n[2],
                u = r[0],
                o = r[1],
                r = r[2]; return t[0] = e * r - n * o, t[1] = n * u - a * r, t[2] = a * o - e * u, t }, n.lerp = function(t, n, r, a) { var e = n[0],
                u = n[1],
                n = n[2]; return t[0] = e + a * (r[0] - e), t[1] = u + a * (r[1] - u), t[2] = n + a * (r[2] - n), t }, n.hermite = function(t, n, r, a, e, u) { var o = u * u,
                i = o * (2 * u - 3) + 1,
                s = o * (u - 2) + u,
                c = o * (u - 1),
                o = o * (3 - 2 * u); return t[0] = n[0] * i + r[0] * s + a[0] * c + e[0] * o, t[1] = n[1] * i + r[1] * s + a[1] * c + e[1] * o, t[2] = n[2] * i + r[2] * s + a[2] * c + e[2] * o, t }, n.bezier = function(t, n, r, a, e, u) { var o = 1 - u,
                i = o * o,
                s = u * u,
                c = i * o,
                i = 3 * u * i,
                o = 3 * s * o,
                s = s * u; return t[0] = n[0] * c + r[0] * i + a[0] * o + e[0] * s, t[1] = n[1] * c + r[1] * i + a[1] * o + e[1] * s, t[2] = n[2] * c + r[2] * i + a[2] * o + e[2] * s, t }, n.random = function(t, n) { n = n || 1; var r = 2 * o.RANDOM() * Math.PI,
                a = 2 * o.RANDOM() - 1,
                e = Math.sqrt(1 - a * a) * n; return t[0] = Math.cos(r) * e, t[1] = Math.sin(r) * e, t[2] = a * n, t }, n.transformMat4 = function(t, n, r) { var a, e = n[0],
                u = n[1],
                n = n[2]; return a = (a = r[3] * e + r[7] * u + r[11] * n + r[15]) || 1, t[0] = (r[0] * e + r[4] * u + r[8] * n + r[12]) / a, t[1] = (r[1] * e + r[5] * u + r[9] * n + r[13]) / a, t[2] = (r[2] * e + r[6] * u + r[10] * n + r[14]) / a, t }, n.transformMat3 = function(t, n, r) { var a = n[0],
                e = n[1],
                n = n[2]; return t[0] = a * r[0] + e * r[3] + n * r[6], t[1] = a * r[1] + e * r[4] + n * r[7], t[2] = a * r[2] + e * r[5] + n * r[8], t }, n.transformQuat = function(t, n, r) { var a = n[0],
                e = n[1],
                n = n[2],
                u = r[0],
                o = r[1],
                i = r[2],
                r = r[3],
                s = r * a + o * n - i * e,
                c = r * e + i * a - u * n,
                M = r * n + u * e - o * a,
                a = -u * a - o * e - i * n; return t[0] = s * r + a * -u + c * -i - M * -o, t[1] = c * r + a * -o + M * -u - s * -i, t[2] = M * r + a * -i + s * -o - c * -u, t }, n.rotateX = function(t, n, r, a) { var e = [],
                u = []; return e[0] = n[0] - r[0], e[1] = n[1] - r[1], e[2] = n[2] - r[2], u[0] = e[0], u[1] = e[1] * Math.cos(a) - e[2] * Math.sin(a), u[2] = e[1] * Math.sin(a) + e[2] * Math.cos(a), t[0] = u[0] + r[0], t[1] = u[1] + r[1], t[2] = u[2] + r[2], t }, n.rotateY = function(t, n, r, a) { var e = [],
                u = []; return e[0] = n[0] - r[0], e[1] = n[1] - r[1], e[2] = n[2] - r[2], u[0] = e[2] * Math.sin(a) + e[0] * Math.cos(a), u[1] = e[1], u[2] = e[2] * Math.cos(a) - e[0] * Math.sin(a), t[0] = u[0] + r[0], t[1] = u[1] + r[1], t[2] = u[2] + r[2], t }, n.rotateZ = function(t, n, r, a) { var e = [],
                u = []; return e[0] = n[0] - r[0], e[1] = n[1] - r[1], e[2] = n[2] - r[2], u[0] = e[0] * Math.cos(a) - e[1] * Math.sin(a), u[1] = e[0] * Math.sin(a) + e[1] * Math.cos(a), u[2] = e[2], t[0] = u[0] + r[0], t[1] = u[1] + r[1], t[2] = u[2] + r[2], t }, n.angle = function(t, n) { t = u(t[0], t[1], t[2]), n = u(n[0], n[1], n[2]), l(t, t), l(n, n), t = v(t, n); return 1 < t ? 0 : t < -1 ? Math.PI : Math.acos(t) }, n.str = function(t) { return "vec3(" + t[0] + ", " + t[1] + ", " + t[2] + ")" }, n.exactEquals = function(t, n) { return t[0] === n[0] && t[1] === n[1] && t[2] === n[2] }, n.equals = function(t, n) { var r = t[0],
                a = t[1],
                t = t[2],
                e = n[0],
                u = n[1],
                n = n[2]; return Math.abs(r - e) <= o.EPSILON * Math.max(1, Math.abs(r), Math.abs(e)) && Math.abs(a - u) <= o.EPSILON * Math.max(1, Math.abs(a), Math.abs(u)) && Math.abs(t - n) <= o.EPSILON * Math.max(1, Math.abs(t), Math.abs(n)) }; var o = function(t) {
            { if (t && t.__esModule) return t; var n = {}; if (null != t)
                    for (var r in t) Object.prototype.hasOwnProperty.call(t, r) && (n[r] = t[r]); return n.default = t, n } }(r(0));

        function a() { var t = new o.ARRAY_TYPE(3); return t[0] = 0, t[1] = 0, t[2] = 0, t }

        function e(t) { var n = t[0],
                r = t[1],
                t = t[2]; return Math.sqrt(n * n + r * r + t * t) }

        function u(t, n, r) { var a = new o.ARRAY_TYPE(3); return a[0] = t, a[1] = n, a[2] = r, a }

        function i(t, n, r) { return t[0] = n[0] - r[0], t[1] = n[1] - r[1], t[2] = n[2] - r[2], t }

        function s(t, n, r) { return t[0] = n[0] * r[0], t[1] = n[1] * r[1], t[2] = n[2] * r[2], t }

        function c(t, n, r) { return t[0] = n[0] / r[0], t[1] = n[1] / r[1], t[2] = n[2] / r[2], t }

        function M(t, n) { var r = n[0] - t[0],
                a = n[1] - t[1],
                n = n[2] - t[2]; return Math.sqrt(r * r + a * a + n * n) }

        function h(t, n) { var r = n[0] - t[0],
                a = n[1] - t[1],
                n = n[2] - t[2]; return r * r + a * a + n * n }

        function f(t) { var n = t[0],
                r = t[1],
                t = t[2]; return n * n + r * r + t * t }

        function l(t, n) { var r = n[0],
                a = n[1],
                e = n[2],
                r = r * r + a * a + e * e; return 0 < r && (r = 1 / Math.sqrt(r), t[0] = n[0] * r, t[1] = n[1] * r, t[2] = n[2] * r), t }

        function v(t, n) { return t[0] * n[0] + t[1] * n[1] + t[2] * n[2] } var d;
        n.sub = i, n.mul = s, n.div = c, n.dist = M, n.sqrDist = h, n.len = e, n.sqrLen = f, n.forEach = (d = a(), function(t, n, r, a, e, u) { var o = void 0,
                i = void 0; for (n = n || 3, r = r || 0, i = a ? Math.min(a * n + r, t.length) : t.length, o = r; o < i; o += n) d[0] = t[o], d[1] = t[o + 1], d[2] = t[o + 2], e(d, d, u), t[o] = d[0], t[o + 1] = d[1], t[o + 2] = d[2]; return t }) }, function(t, n, r) { "use strict";
        Object.defineProperty(n, "__esModule", { value: !0 }), n.forEach = n.sqrLen = n.len = n.sqrDist = n.dist = n.div = n.mul = n.sub = void 0, n.create = a, n.clone = function(t) { var n = new s.ARRAY_TYPE(4); return n[0] = t[0], n[1] = t[1], n[2] = t[2], n[3] = t[3], n }, n.fromValues = function(t, n, r, a) { var e = new s.ARRAY_TYPE(4); return e[0] = t, e[1] = n, e[2] = r, e[3] = a, e }, n.copy = function(t, n) { return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t }, n.set = function(t, n, r, a, e) { return t[0] = n, t[1] = r, t[2] = a, t[3] = e, t }, n.add = function(t, n, r) { return t[0] = n[0] + r[0], t[1] = n[1] + r[1], t[2] = n[2] + r[2], t[3] = n[3] + r[3], t }, n.subtract = e, n.multiply = u, n.divide = o, n.ceil = function(t, n) { return t[0] = Math.ceil(n[0]), t[1] = Math.ceil(n[1]), t[2] = Math.ceil(n[2]), t[3] = Math.ceil(n[3]), t }, n.floor = function(t, n) { return t[0] = Math.floor(n[0]), t[1] = Math.floor(n[1]), t[2] = Math.floor(n[2]), t[3] = Math.floor(n[3]), t }, n.min = function(t, n, r) { return t[0] = Math.min(n[0], r[0]), t[1] = Math.min(n[1], r[1]), t[2] = Math.min(n[2], r[2]), t[3] = Math.min(n[3], r[3]), t }, n.max = function(t, n, r) { return t[0] = Math.max(n[0], r[0]), t[1] = Math.max(n[1], r[1]), t[2] = Math.max(n[2], r[2]), t[3] = Math.max(n[3], r[3]), t }, n.round = function(t, n) { return t[0] = Math.round(n[0]), t[1] = Math.round(n[1]), t[2] = Math.round(n[2]), t[3] = Math.round(n[3]), t }, n.scale = i, n.scaleAndAdd = function(t, n, r, a) { return t[0] = n[0] + r[0] * a, t[1] = n[1] + r[1] * a, t[2] = n[2] + r[2] * a, t[3] = n[3] + r[3] * a, t }, n.distance = c, n.squaredDistance = M, n.length = h, n.squaredLength = f, n.negate = function(t, n) { return t[0] = -n[0], t[1] = -n[1], t[2] = -n[2], t[3] = -n[3], t }, n.inverse = function(t, n) { return t[0] = 1 / n[0], t[1] = 1 / n[1], t[2] = 1 / n[2], t[3] = 1 / n[3], t }, n.normalize = l, n.dot = function(t, n) { return t[0] * n[0] + t[1] * n[1] + t[2] * n[2] + t[3] * n[3] }, n.lerp = function(t, n, r, a) { var e = n[0],
                u = n[1],
                o = n[2],
                n = n[3]; return t[0] = e + a * (r[0] - e), t[1] = u + a * (r[1] - u), t[2] = o + a * (r[2] - o), t[3] = n + a * (r[3] - n), t }, n.random = function(t, n) { return n = n || 1, t[0] = s.RANDOM(), t[1] = s.RANDOM(), t[2] = s.RANDOM(), t[3] = s.RANDOM(), l(t, t), i(t, t, n), t }, n.transformMat4 = function(t, n, r) { var a = n[0],
                e = n[1],
                u = n[2],
                n = n[3]; return t[0] = r[0] * a + r[4] * e + r[8] * u + r[12] * n, t[1] = r[1] * a + r[5] * e + r[9] * u + r[13] * n, t[2] = r[2] * a + r[6] * e + r[10] * u + r[14] * n, t[3] = r[3] * a + r[7] * e + r[11] * u + r[15] * n, t }, n.transformQuat = function(t, n, r) { var a = n[0],
                e = n[1],
                u = n[2],
                o = r[0],
                i = r[1],
                s = r[2],
                r = r[3],
                c = r * a + i * u - s * e,
                M = r * e + s * a - o * u,
                h = r * u + o * e - i * a,
                a = -o * a - i * e - s * u; return t[0] = c * r + a * -o + M * -s - h * -i, t[1] = M * r + a * -i + h * -o - c * -s, t[2] = h * r + a * -s + c * -i - M * -o, t[3] = n[3], t }, n.str = function(t) { return "vec4(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ")" }, n.exactEquals = function(t, n) { return t[0] === n[0] && t[1] === n[1] && t[2] === n[2] && t[3] === n[3] }, n.equals = function(t, n) { var r = t[0],
                a = t[1],
                e = t[2],
                t = t[3],
                u = n[0],
                o = n[1],
                i = n[2],
                n = n[3]; return Math.abs(r - u) <= s.EPSILON * Math.max(1, Math.abs(r), Math.abs(u)) && Math.abs(a - o) <= s.EPSILON * Math.max(1, Math.abs(a), Math.abs(o)) && Math.abs(e - i) <= s.EPSILON * Math.max(1, Math.abs(e), Math.abs(i)) && Math.abs(t - n) <= s.EPSILON * Math.max(1, Math.abs(t), Math.abs(n)) }; var s = function(t) {
            { if (t && t.__esModule) return t; var n = {}; if (null != t)
                    for (var r in t) Object.prototype.hasOwnProperty.call(t, r) && (n[r] = t[r]); return n.default = t, n } }(r(0));

        function a() { var t = new s.ARRAY_TYPE(4); return t[0] = 0, t[1] = 0, t[2] = 0, t[3] = 0, t }

        function e(t, n, r) { return t[0] = n[0] - r[0], t[1] = n[1] - r[1], t[2] = n[2] - r[2], t[3] = n[3] - r[3], t }

        function u(t, n, r) { return t[0] = n[0] * r[0], t[1] = n[1] * r[1], t[2] = n[2] * r[2], t[3] = n[3] * r[3], t }

        function o(t, n, r) { return t[0] = n[0] / r[0], t[1] = n[1] / r[1], t[2] = n[2] / r[2], t[3] = n[3] / r[3], t }

        function i(t, n, r) { return t[0] = n[0] * r, t[1] = n[1] * r, t[2] = n[2] * r, t[3] = n[3] * r, t }

        function c(t, n) { var r = n[0] - t[0],
                a = n[1] - t[1],
                e = n[2] - t[2],
                n = n[3] - t[3]; return Math.sqrt(r * r + a * a + e * e + n * n) }

        function M(t, n) { var r = n[0] - t[0],
                a = n[1] - t[1],
                e = n[2] - t[2],
                n = n[3] - t[3]; return r * r + a * a + e * e + n * n }

        function h(t) { var n = t[0],
                r = t[1],
                a = t[2],
                t = t[3]; return Math.sqrt(n * n + r * r + a * a + t * t) }

        function f(t) { var n = t[0],
                r = t[1],
                a = t[2],
                t = t[3]; return n * n + r * r + a * a + t * t }

        function l(t, n) { var r = n[0],
                a = n[1],
                e = n[2],
                n = n[3],
                u = r * r + a * a + e * e + n * n; return 0 < u && (u = 1 / Math.sqrt(u), t[0] = r * u, t[1] = a * u, t[2] = e * u, t[3] = n * u), t } var v;
        n.sub = e, n.mul = u, n.div = o, n.dist = c, n.sqrDist = M, n.len = h, n.sqrLen = f, n.forEach = (v = a(), function(t, n, r, a, e, u) { var o = void 0,
                i = void 0; for (n = n || 4, r = r || 0, i = a ? Math.min(a * n + r, t.length) : t.length, o = r; o < i; o += n) v[0] = t[o], v[1] = t[o + 1], v[2] = t[o + 2], v[3] = t[o + 3], e(v, v, u), t[o] = v[0], t[o + 1] = v[1], t[o + 2] = v[2], t[o + 3] = v[3]; return t }) }, function(t, n, r) { "use strict";
        Object.defineProperty(n, "__esModule", { value: !0 }), n.vec4 = n.vec3 = n.vec2 = n.quat = n.mat4 = n.mat3 = n.mat2d = n.mat2 = n.glMatrix = void 0; var a = h(r(0)),
            e = h(r(5)),
            u = h(r(6)),
            o = h(r(1)),
            i = h(r(7)),
            s = h(r(8)),
            c = h(r(9)),
            M = h(r(2)),
            r = h(r(3));

        function h(t) { if (t && t.__esModule) return t; var n = {}; if (null != t)
                for (var r in t) Object.prototype.hasOwnProperty.call(t, r) && (n[r] = t[r]); return n.default = t, n }
        n.glMatrix = a, n.mat2 = e, n.mat2d = u, n.mat3 = o, n.mat4 = i, n.quat = s, n.vec2 = c, n.vec3 = M, n.vec4 = r }, function(t, n, r) { "use strict";
        Object.defineProperty(n, "__esModule", { value: !0 }), n.sub = n.mul = void 0, n.create = function() { var t = new s.ARRAY_TYPE(4); return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 1, t }, n.clone = function(t) { var n = new s.ARRAY_TYPE(4); return n[0] = t[0], n[1] = t[1], n[2] = t[2], n[3] = t[3], n }, n.copy = function(t, n) { return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t }, n.identity = function(t) { return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 1, t }, n.fromValues = function(t, n, r, a) { var e = new s.ARRAY_TYPE(4); return e[0] = t, e[1] = n, e[2] = r, e[3] = a, e }, n.set = function(t, n, r, a, e) { return t[0] = n, t[1] = r, t[2] = a, t[3] = e, t }, n.transpose = function(t, n) {
            { var r;
                t === n ? (r = n[1], t[1] = n[2], t[2] = r) : (t[0] = n[0], t[1] = n[2], t[2] = n[1], t[3] = n[3]) } return t }, n.invert = function(t, n) { var r = n[0],
                a = n[1],
                e = n[2],
                n = n[3],
                u = r * n - e * a; return u ? (u = 1 / u, t[0] = n * u, t[1] = -a * u, t[2] = -e * u, t[3] = r * u, t) : null }, n.adjoint = function(t, n) { var r = n[0]; return t[0] = n[3], t[1] = -n[1], t[2] = -n[2], t[3] = r, t }, n.determinant = function(t) { return t[0] * t[3] - t[2] * t[1] }, n.multiply = a, n.rotate = function(t, n, r) { var a = n[0],
                e = n[1],
                u = n[2],
                n = n[3],
                o = Math.sin(r),
                r = Math.cos(r); return t[0] = a * r + u * o, t[1] = e * r + n * o, t[2] = a * -o + u * r, t[3] = e * -o + n * r, t }, n.scale = function(t, n, r) { var a = n[0],
                e = n[1],
                u = n[2],
                n = n[3],
                o = r[0],
                r = r[1]; return t[0] = a * o, t[1] = e * o, t[2] = u * r, t[3] = n * r, t }, n.fromRotation = function(t, n) { var r = Math.sin(n),
                n = Math.cos(n); return t[0] = n, t[1] = r, t[2] = -r, t[3] = n, t }, n.fromScaling = function(t, n) { return t[0] = n[0], t[1] = 0, t[2] = 0, t[3] = n[1], t }, n.str = function(t) { return "mat2(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ")" }, n.frob = function(t) { return Math.sqrt(Math.pow(t[0], 2) + Math.pow(t[1], 2) + Math.pow(t[2], 2) + Math.pow(t[3], 2)) }, n.LDU = function(t, n, r, a) { return t[2] = a[2] / a[0], r[0] = a[0], r[1] = a[1], r[3] = a[3] - t[2] * r[1], [t, n, r] }, n.add = function(t, n, r) { return t[0] = n[0] + r[0], t[1] = n[1] + r[1], t[2] = n[2] + r[2], t[3] = n[3] + r[3], t }, n.subtract = e, n.exactEquals = function(t, n) { return t[0] === n[0] && t[1] === n[1] && t[2] === n[2] && t[3] === n[3] }, n.equals = function(t, n) { var r = t[0],
                a = t[1],
                e = t[2],
                t = t[3],
                u = n[0],
                o = n[1],
                i = n[2],
                n = n[3]; return Math.abs(r - u) <= s.EPSILON * Math.max(1, Math.abs(r), Math.abs(u)) && Math.abs(a - o) <= s.EPSILON * Math.max(1, Math.abs(a), Math.abs(o)) && Math.abs(e - i) <= s.EPSILON * Math.max(1, Math.abs(e), Math.abs(i)) && Math.abs(t - n) <= s.EPSILON * Math.max(1, Math.abs(t), Math.abs(n)) }, n.multiplyScalar = function(t, n, r) { return t[0] = n[0] * r, t[1] = n[1] * r, t[2] = n[2] * r, t[3] = n[3] * r, t }, n.multiplyScalarAndAdd = function(t, n, r, a) { return t[0] = n[0] + r[0] * a, t[1] = n[1] + r[1] * a, t[2] = n[2] + r[2] * a, t[3] = n[3] + r[3] * a, t }; var s = function(t) {
            { if (t && t.__esModule) return t; var n = {}; if (null != t)
                    for (var r in t) Object.prototype.hasOwnProperty.call(t, r) && (n[r] = t[r]); return n.default = t, n } }(r(0));

        function a(t, n, r) { var a = n[0],
                e = n[1],
                u = n[2],
                n = n[3],
                o = r[0],
                i = r[1],
                s = r[2],
                r = r[3]; return t[0] = a * o + u * i, t[1] = e * o + n * i, t[2] = a * s + u * r, t[3] = e * s + n * r, t }

        function e(t, n, r) { return t[0] = n[0] - r[0], t[1] = n[1] - r[1], t[2] = n[2] - r[2], t[3] = n[3] - r[3], t }
        n.mul = a, n.sub = e }, function(t, n, r) { "use strict";
        Object.defineProperty(n, "__esModule", { value: !0 }), n.sub = n.mul = void 0, n.create = function() { var t = new f.ARRAY_TYPE(6); return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 1, t[4] = 0, t[5] = 0, t }, n.clone = function(t) { var n = new f.ARRAY_TYPE(6); return n[0] = t[0], n[1] = t[1], n[2] = t[2], n[3] = t[3], n[4] = t[4], n[5] = t[5], n }, n.copy = function(t, n) { return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t }, n.identity = function(t) { return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 1, t[4] = 0, t[5] = 0, t }, n.fromValues = function(t, n, r, a, e, u) { var o = new f.ARRAY_TYPE(6); return o[0] = t, o[1] = n, o[2] = r, o[3] = a, o[4] = e, o[5] = u, o }, n.set = function(t, n, r, a, e, u, o) { return t[0] = n, t[1] = r, t[2] = a, t[3] = e, t[4] = u, t[5] = o, t }, n.invert = function(t, n) { var r = n[0],
                a = n[1],
                e = n[2],
                u = n[3],
                o = n[4],
                n = n[5],
                i = r * u - a * e; return i ? (i = 1 / i, t[0] = u * i, t[1] = -a * i, t[2] = -e * i, t[3] = r * i, t[4] = (e * n - u * o) * i, t[5] = (a * o - r * n) * i, t) : null }, n.determinant = function(t) { return t[0] * t[3] - t[1] * t[2] }, n.multiply = a, n.rotate = function(t, n, r) { var a = n[0],
                e = n[1],
                u = n[2],
                o = n[3],
                i = n[4],
                n = n[5],
                s = Math.sin(r),
                r = Math.cos(r); return t[0] = a * r + u * s, t[1] = e * r + o * s, t[2] = a * -s + u * r, t[3] = e * -s + o * r, t[4] = i, t[5] = n, t }, n.scale = function(t, n, r) { var a = n[0],
                e = n[1],
                u = n[2],
                o = n[3],
                i = n[4],
                n = n[5],
                s = r[0],
                r = r[1]; return t[0] = a * s, t[1] = e * s, t[2] = u * r, t[3] = o * r, t[4] = i, t[5] = n, t }, n.translate = function(t, n, r) { var a = n[0],
                e = n[1],
                u = n[2],
                o = n[3],
                i = n[4],
                n = n[5],
                s = r[0],
                r = r[1]; return t[0] = a, t[1] = e, t[2] = u, t[3] = o, t[4] = a * s + u * r + i, t[5] = e * s + o * r + n, t }, n.fromRotation = function(t, n) { var r = Math.sin(n),
                n = Math.cos(n); return t[0] = n, t[1] = r, t[2] = -r, t[3] = n, t[4] = 0, t[5] = 0, t }, n.fromScaling = function(t, n) { return t[0] = n[0], t[1] = 0, t[2] = 0, t[3] = n[1], t[4] = 0, t[5] = 0, t }, n.fromTranslation = function(t, n) { return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 1, t[4] = n[0], t[5] = n[1], t }, n.str = function(t) { return "mat2d(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ", " + t[4] + ", " + t[5] + ")" }, n.frob = function(t) { return Math.sqrt(Math.pow(t[0], 2) + Math.pow(t[1], 2) + Math.pow(t[2], 2) + Math.pow(t[3], 2) + Math.pow(t[4], 2) + Math.pow(t[5], 2) + 1) }, n.add = function(t, n, r) { return t[0] = n[0] + r[0], t[1] = n[1] + r[1], t[2] = n[2] + r[2], t[3] = n[3] + r[3], t[4] = n[4] + r[4], t[5] = n[5] + r[5], t }, n.subtract = e, n.multiplyScalar = function(t, n, r) { return t[0] = n[0] * r, t[1] = n[1] * r, t[2] = n[2] * r, t[3] = n[3] * r, t[4] = n[4] * r, t[5] = n[5] * r, t }, n.multiplyScalarAndAdd = function(t, n, r, a) { return t[0] = n[0] + r[0] * a, t[1] = n[1] + r[1] * a, t[2] = n[2] + r[2] * a, t[3] = n[3] + r[3] * a, t[4] = n[4] + r[4] * a, t[5] = n[5] + r[5] * a, t }, n.exactEquals = function(t, n) { return t[0] === n[0] && t[1] === n[1] && t[2] === n[2] && t[3] === n[3] && t[4] === n[4] && t[5] === n[5] }, n.equals = function(t, n) { var r = t[0],
                a = t[1],
                e = t[2],
                u = t[3],
                o = t[4],
                t = t[5],
                i = n[0],
                s = n[1],
                c = n[2],
                M = n[3],
                h = n[4],
                n = n[5]; return Math.abs(r - i) <= f.EPSILON * Math.max(1, Math.abs(r), Math.abs(i)) && Math.abs(a - s) <= f.EPSILON * Math.max(1, Math.abs(a), Math.abs(s)) && Math.abs(e - c) <= f.EPSILON * Math.max(1, Math.abs(e), Math.abs(c)) && Math.abs(u - M) <= f.EPSILON * Math.max(1, Math.abs(u), Math.abs(M)) && Math.abs(o - h) <= f.EPSILON * Math.max(1, Math.abs(o), Math.abs(h)) && Math.abs(t - n) <= f.EPSILON * Math.max(1, Math.abs(t), Math.abs(n)) }; var f = function(t) {
            { if (t && t.__esModule) return t; var n = {}; if (null != t)
                    for (var r in t) Object.prototype.hasOwnProperty.call(t, r) && (n[r] = t[r]); return n.default = t, n } }(r(0));

        function a(t, n, r) { var a = n[0],
                e = n[1],
                u = n[2],
                o = n[3],
                i = n[4],
                n = n[5],
                s = r[0],
                c = r[1],
                M = r[2],
                h = r[3],
                f = r[4],
                r = r[5]; return t[0] = a * s + u * c, t[1] = e * s + o * c, t[2] = a * M + u * h, t[3] = e * M + o * h, t[4] = a * f + u * r + i, t[5] = e * f + o * r + n, t }

        function e(t, n, r) { return t[0] = n[0] - r[0], t[1] = n[1] - r[1], t[2] = n[2] - r[2], t[3] = n[3] - r[3], t[4] = n[4] - r[4], t[5] = n[5] - r[5], t }
        n.mul = a, n.sub = e }, function(t, n, r) { "use strict";
        Object.defineProperty(n, "__esModule", { value: !0 }), n.sub = n.mul = void 0, n.create = function() { var t = new N.ARRAY_TYPE(16); return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = 1, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[10] = 1, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t }, n.clone = function(t) { var n = new N.ARRAY_TYPE(16); return n[0] = t[0], n[1] = t[1], n[2] = t[2], n[3] = t[3], n[4] = t[4], n[5] = t[5], n[6] = t[6], n[7] = t[7], n[8] = t[8], n[9] = t[9], n[10] = t[10], n[11] = t[11], n[12] = t[12], n[13] = t[13], n[14] = t[14], n[15] = t[15], n }, n.copy = function(t, n) { return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], t[9] = n[9], t[10] = n[10], t[11] = n[11], t[12] = n[12], t[13] = n[13], t[14] = n[14], t[15] = n[15], t }, n.fromValues = function(t, n, r, a, e, u, o, i, s, c, M, h, f, l, v, d) { var b = new N.ARRAY_TYPE(16); return b[0] = t, b[1] = n, b[2] = r, b[3] = a, b[4] = e, b[5] = u, b[6] = o, b[7] = i, b[8] = s, b[9] = c, b[10] = M, b[11] = h, b[12] = f, b[13] = l, b[14] = v, b[15] = d, b }, n.set = function(t, n, r, a, e, u, o, i, s, c, M, h, f, l, v, d, b) { return t[0] = n, t[1] = r, t[2] = a, t[3] = e, t[4] = u, t[5] = o, t[6] = i, t[7] = s, t[8] = c, t[9] = M, t[10] = h, t[11] = f, t[12] = l, t[13] = v, t[14] = d, t[15] = b, t }, n.identity = function(t) { return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = 1, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[10] = 1, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t }, n.transpose = function(t, n) {
            { var r, a, e, u, o, i;
                t === n ? (r = n[1], a = n[2], e = n[3], u = n[6], o = n[7], i = n[11], t[1] = n[4], t[2] = n[8], t[3] = n[12], t[4] = r, t[6] = n[9], t[7] = n[13], t[8] = a, t[9] = u, t[11] = n[14], t[12] = e, t[13] = o, t[14] = i) : (t[0] = n[0], t[1] = n[4], t[2] = n[8], t[3] = n[12], t[4] = n[1], t[5] = n[5], t[6] = n[9], t[7] = n[13], t[8] = n[2], t[9] = n[6], t[10] = n[10], t[11] = n[14], t[12] = n[3], t[13] = n[7], t[14] = n[11], t[15] = n[15]) } return t }, n.invert = function(t, n) { var r = n[0],
                a = n[1],
                e = n[2],
                u = n[3],
                o = n[4],
                i = n[5],
                s = n[6],
                c = n[7],
                M = n[8],
                h = n[9],
                f = n[10],
                l = n[11],
                v = n[12],
                d = n[13],
                b = n[14],
                n = n[15],
                m = r * i - a * o,
                p = r * s - e * o,
                P = r * c - u * o,
                E = a * s - e * i,
                O = a * c - u * i,
                x = e * c - u * s,
                A = M * d - h * v,
                q = M * b - f * v,
                y = M * n - l * v,
                w = h * b - f * d,
                R = h * n - l * d,
                L = f * n - l * b,
                S = m * L - p * R + P * w + E * y - O * q + x * A; return S ? (S = 1 / S, t[0] = (i * L - s * R + c * w) * S, t[1] = (e * R - a * L - u * w) * S, t[2] = (d * x - b * O + n * E) * S, t[3] = (f * O - h * x - l * E) * S, t[4] = (s * y - o * L - c * q) * S, t[5] = (r * L - e * y + u * q) * S, t[6] = (b * P - v * x - n * p) * S, t[7] = (M * x - f * P + l * p) * S, t[8] = (o * R - i * y + c * A) * S, t[9] = (a * y - r * R - u * A) * S, t[10] = (v * O - d * P + n * m) * S, t[11] = (h * P - M * O - l * m) * S, t[12] = (i * q - o * w - s * A) * S, t[13] = (r * w - a * q + e * A) * S, t[14] = (d * p - v * E - b * m) * S, t[15] = (M * E - h * p + f * m) * S, t) : null }, n.adjoint = function(t, n) { var r = n[0],
                a = n[1],
                e = n[2],
                u = n[3],
                o = n[4],
                i = n[5],
                s = n[6],
                c = n[7],
                M = n[8],
                h = n[9],
                f = n[10],
                l = n[11],
                v = n[12],
                d = n[13],
                b = n[14],
                n = n[15]; return t[0] = i * (f * n - l * b) - h * (s * n - c * b) + d * (s * l - c * f), t[1] = -(a * (f * n - l * b) - h * (e * n - u * b) + d * (e * l - u * f)), t[2] = a * (s * n - c * b) - i * (e * n - u * b) + d * (e * c - u * s), t[3] = -(a * (s * l - c * f) - i * (e * l - u * f) + h * (e * c - u * s)), t[4] = -(o * (f * n - l * b) - M * (s * n - c * b) + v * (s * l - c * f)), t[5] = r * (f * n - l * b) - M * (e * n - u * b) + v * (e * l - u * f), t[6] = -(r * (s * n - c * b) - o * (e * n - u * b) + v * (e * c - u * s)), t[7] = r * (s * l - c * f) - o * (e * l - u * f) + M * (e * c - u * s), t[8] = o * (h * n - l * d) - M * (i * n - c * d) + v * (i * l - c * h), t[9] = -(r * (h * n - l * d) - M * (a * n - u * d) + v * (a * l - u * h)), t[10] = r * (i * n - c * d) - o * (a * n - u * d) + v * (a * c - u * i), t[11] = -(r * (i * l - c * h) - o * (a * l - u * h) + M * (a * c - u * i)), t[12] = -(o * (h * b - f * d) - M * (i * b - s * d) + v * (i * f - s * h)), t[13] = r * (h * b - f * d) - M * (a * b - e * d) + v * (a * f - e * h), t[14] = -(r * (i * b - s * d) - o * (a * b - e * d) + v * (a * s - e * i)), t[15] = r * (i * f - s * h) - o * (a * f - e * h) + M * (a * s - e * i), t }, n.determinant = function(t) { var n = t[0],
                r = t[1],
                a = t[2],
                e = t[3],
                u = t[4],
                o = t[5],
                i = t[6],
                s = t[7],
                c = t[8],
                M = t[9],
                h = t[10],
                f = t[11],
                l = t[12],
                v = t[13],
                d = t[14],
                t = t[15]; return (n * o - r * u) * (h * t - f * d) - (n * i - a * u) * (M * t - f * v) + (n * s - e * u) * (M * d - h * v) + (r * i - a * o) * (c * t - f * l) - (r * s - e * o) * (c * d - h * l) + (a * s - e * i) * (c * v - M * l) }, n.multiply = a, n.translate = function(t, n, r) { var a = r[0],
                e = r[1],
                r = r[2],
                u = void 0,
                o = void 0,
                i = void 0,
                s = void 0,
                c = void 0,
                M = void 0,
                h = void 0,
                f = void 0,
                l = void 0,
                v = void 0,
                d = void 0,
                b = void 0;
            n === t ? (t[12] = n[0] * a + n[4] * e + n[8] * r + n[12], t[13] = n[1] * a + n[5] * e + n[9] * r + n[13], t[14] = n[2] * a + n[6] * e + n[10] * r + n[14], t[15] = n[3] * a + n[7] * e + n[11] * r + n[15]) : (u = n[0], o = n[1], i = n[2], s = n[3], c = n[4], M = n[5], h = n[6], f = n[7], l = n[8], v = n[9], d = n[10], b = n[11], t[0] = u, t[1] = o, t[2] = i, t[3] = s, t[4] = c, t[5] = M, t[6] = h, t[7] = f, t[8] = l, t[9] = v, t[10] = d, t[11] = b, t[12] = u * a + c * e + l * r + n[12], t[13] = o * a + M * e + v * r + n[13], t[14] = i * a + h * e + d * r + n[14], t[15] = s * a + f * e + b * r + n[15]); return t }, n.scale = function(t, n, r) { var a = r[0],
                e = r[1],
                r = r[2]; return t[0] = n[0] * a, t[1] = n[1] * a, t[2] = n[2] * a, t[3] = n[3] * a, t[4] = n[4] * e, t[5] = n[5] * e, t[6] = n[6] * e, t[7] = n[7] * e, t[8] = n[8] * r, t[9] = n[9] * r, t[10] = n[10] * r, t[11] = n[11] * r, t[12] = n[12], t[13] = n[13], t[14] = n[14], t[15] = n[15], t }, n.rotate = function(t, n, r, a) { var e = a[0],
                u = a[1],
                a = a[2],
                o = Math.sqrt(e * e + u * u + a * a),
                i = void 0,
                s = void 0,
                c = void 0,
                M = void 0,
                h = void 0,
                f = void 0,
                l = void 0,
                v = void 0,
                d = void 0,
                b = void 0,
                m = void 0,
                p = void 0,
                P = void 0,
                E = void 0,
                O = void 0,
                x = void 0,
                A = void 0,
                q = void 0,
                y = void 0,
                w = void 0,
                R = void 0,
                L = void 0,
                S = void 0,
                _ = void 0; if (Math.abs(o) < N.EPSILON) return null;
            e *= o = 1 / o, u *= o, a *= o, i = Math.sin(r), s = Math.cos(r), c = 1 - s, M = n[0], h = n[1], f = n[2], l = n[3], v = n[4], d = n[5], b = n[6], m = n[7], p = n[8], P = n[9], E = n[10], O = n[11], x = e * e * c + s, A = u * e * c + a * i, q = a * e * c - u * i, y = e * u * c - a * i, w = u * u * c + s, R = a * u * c + e * i, L = e * a * c + u * i, S = u * a * c - e * i, _ = a * a * c + s, t[0] = M * x + v * A + p * q, t[1] = h * x + d * A + P * q, t[2] = f * x + b * A + E * q, t[3] = l * x + m * A + O * q, t[4] = M * y + v * w + p * R, t[5] = h * y + d * w + P * R, t[6] = f * y + b * w + E * R, t[7] = l * y + m * w + O * R, t[8] = M * L + v * S + p * _, t[9] = h * L + d * S + P * _, t[10] = f * L + b * S + E * _, t[11] = l * L + m * S + O * _, n !== t && (t[12] = n[12], t[13] = n[13], t[14] = n[14], t[15] = n[15]); return t }, n.rotateX = function(t, n, r) { var a = Math.sin(r),
                r = Math.cos(r),
                e = n[4],
                u = n[5],
                o = n[6],
                i = n[7],
                s = n[8],
                c = n[9],
                M = n[10],
                h = n[11];
            n !== t && (t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[12] = n[12], t[13] = n[13], t[14] = n[14], t[15] = n[15]); return t[4] = e * r + s * a, t[5] = u * r + c * a, t[6] = o * r + M * a, t[7] = i * r + h * a, t[8] = s * r - e * a, t[9] = c * r - u * a, t[10] = M * r - o * a, t[11] = h * r - i * a, t }, n.rotateY = function(t, n, r) { var a = Math.sin(r),
                r = Math.cos(r),
                e = n[0],
                u = n[1],
                o = n[2],
                i = n[3],
                s = n[8],
                c = n[9],
                M = n[10],
                h = n[11];
            n !== t && (t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[12] = n[12], t[13] = n[13], t[14] = n[14], t[15] = n[15]); return t[0] = e * r - s * a, t[1] = u * r - c * a, t[2] = o * r - M * a, t[3] = i * r - h * a, t[8] = e * a + s * r, t[9] = u * a + c * r, t[10] = o * a + M * r, t[11] = i * a + h * r, t }, n.rotateZ = function(t, n, r) { var a = Math.sin(r),
                r = Math.cos(r),
                e = n[0],
                u = n[1],
                o = n[2],
                i = n[3],
                s = n[4],
                c = n[5],
                M = n[6],
                h = n[7];
            n !== t && (t[8] = n[8], t[9] = n[9], t[10] = n[10], t[11] = n[11], t[12] = n[12], t[13] = n[13], t[14] = n[14], t[15] = n[15]); return t[0] = e * r + s * a, t[1] = u * r + c * a, t[2] = o * r + M * a, t[3] = i * r + h * a, t[4] = s * r - e * a, t[5] = c * r - u * a, t[6] = M * r - o * a, t[7] = h * r - i * a, t }, n.fromTranslation = function(t, n) { return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = 1, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[10] = 1, t[11] = 0, t[12] = n[0], t[13] = n[1], t[14] = n[2], t[15] = 1, t }, n.fromScaling = function(t, n) { return t[0] = n[0], t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = n[1], t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[10] = n[2], t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t }, n.fromRotation = function(t, n, r) { var a = r[0],
                e = r[1],
                r = r[2],
                u = Math.sqrt(a * a + e * e + r * r),
                o = void 0,
                i = void 0,
                s = void 0; if (Math.abs(u) < N.EPSILON) return null; return a *= u = 1 / u, e *= u, r *= u, o = Math.sin(n), i = Math.cos(n), s = 1 - i, t[0] = a * a * s + i, t[1] = e * a * s + r * o, t[2] = r * a * s - e * o, t[3] = 0, t[4] = a * e * s - r * o, t[5] = e * e * s + i, t[6] = r * e * s + a * o, t[7] = 0, t[8] = a * r * s + e * o, t[9] = e * r * s - a * o, t[10] = r * r * s + i, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t }, n.fromXRotation = function(t, n) { var r = Math.sin(n),
                n = Math.cos(n); return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = n, t[6] = r, t[7] = 0, t[8] = 0, t[9] = -r, t[10] = n, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t }, n.fromYRotation = function(t, n) { var r = Math.sin(n),
                n = Math.cos(n); return t[0] = n, t[1] = 0, t[2] = -r, t[3] = 0, t[4] = 0, t[5] = 1, t[6] = 0, t[7] = 0, t[8] = r, t[9] = 0, t[10] = n, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t }, n.fromZRotation = function(t, n) { var r = Math.sin(n),
                n = Math.cos(n); return t[0] = n, t[1] = r, t[2] = 0, t[3] = 0, t[4] = -r, t[5] = n, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[10] = 1, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t }, n.fromRotationTranslation = function(t, n, r) { var a = n[0],
                e = n[1],
                u = n[2],
                n = n[3],
                o = a + a,
                i = e + e,
                s = u + u,
                c = a * o,
                M = a * i,
                a = a * s,
                h = e * i,
                e = e * s,
                u = u * s,
                o = n * o,
                i = n * i,
                n = n * s; return t[0] = 1 - (h + u), t[1] = M + n, t[2] = a - i, t[3] = 0, t[4] = M - n, t[5] = 1 - (c + u), t[6] = e + o, t[7] = 0, t[8] = a + i, t[9] = e - o, t[10] = 1 - (c + h), t[11] = 0, t[12] = r[0], t[13] = r[1], t[14] = r[2], t[15] = 1, t }, n.getTranslation = function(t, n) { return t[0] = n[12], t[1] = n[13], t[2] = n[14], t }, n.getScaling = function(t, n) { var r = n[0],
                a = n[1],
                e = n[2],
                u = n[4],
                o = n[5],
                i = n[6],
                s = n[8],
                c = n[9],
                n = n[10]; return t[0] = Math.sqrt(r * r + a * a + e * e), t[1] = Math.sqrt(u * u + o * o + i * i), t[2] = Math.sqrt(s * s + c * c + n * n), t }, n.getRotation = function(t, n) { var r = n[0] + n[5] + n[10],
                a = 0;
            0 < r ? (a = 2 * Math.sqrt(r + 1), t[3] = .25 * a, t[0] = (n[6] - n[9]) / a, t[1] = (n[8] - n[2]) / a, t[2] = (n[1] - n[4]) / a) : n[5] < n[0] & n[10] < n[0] ? (a = 2 * Math.sqrt(1 + n[0] - n[5] - n[10]), t[3] = (n[6] - n[9]) / a, t[0] = .25 * a, t[1] = (n[1] + n[4]) / a, t[2] = (n[8] + n[2]) / a) : n[10] < n[5] ? (a = 2 * Math.sqrt(1 + n[5] - n[0] - n[10]), t[3] = (n[8] - n[2]) / a, t[0] = (n[1] + n[4]) / a, t[1] = .25 * a, t[2] = (n[6] + n[9]) / a) : (a = 2 * Math.sqrt(1 + n[10] - n[0] - n[5]), t[3] = (n[1] - n[4]) / a, t[0] = (n[8] + n[2]) / a, t[1] = (n[6] + n[9]) / a, t[2] = .25 * a); return t }, n.fromRotationTranslationScale = function(t, n, r, a) { var e = n[0],
                u = n[1],
                o = n[2],
                n = n[3],
                i = e + e,
                s = u + u,
                c = o + o,
                M = e * i,
                h = e * s,
                e = e * c,
                f = u * s,
                u = u * c,
                o = o * c,
                i = n * i,
                s = n * s,
                n = n * c,
                c = a[0],
                l = a[1],
                a = a[2]; return t[0] = (1 - (f + o)) * c, t[1] = (h + n) * c, t[2] = (e - s) * c, t[3] = 0, t[4] = (h - n) * l, t[5] = (1 - (M + o)) * l, t[6] = (u + i) * l, t[7] = 0, t[8] = (e + s) * a, t[9] = (u - i) * a, t[10] = (1 - (M + f)) * a, t[11] = 0, t[12] = r[0], t[13] = r[1], t[14] = r[2], t[15] = 1, t }, n.fromRotationTranslationScaleOrigin = function(t, n, r, a, e) { var u = n[0],
                o = n[1],
                i = n[2],
                n = n[3],
                s = u + u,
                c = o + o,
                M = i + i,
                h = u * s,
                f = u * c,
                u = u * M,
                l = o * c,
                o = o * M,
                i = i * M,
                s = n * s,
                c = n * c,
                n = n * M,
                M = a[0],
                v = a[1],
                a = a[2],
                d = e[0],
                b = e[1],
                e = e[2]; return t[0] = (1 - (l + i)) * M, t[1] = (f + n) * M, t[2] = (u - c) * M, t[3] = 0, t[4] = (f - n) * v, t[5] = (1 - (h + i)) * v, t[6] = (o + s) * v, t[7] = 0, t[8] = (u + c) * a, t[9] = (o - s) * a, t[10] = (1 - (h + l)) * a, t[11] = 0, t[12] = r[0] + d - (t[0] * d + t[4] * b + t[8] * e), t[13] = r[1] + b - (t[1] * d + t[5] * b + t[9] * e), t[14] = r[2] + e - (t[2] * d + t[6] * b + t[10] * e), t[15] = 1, t }, n.fromQuat = function(t, n) { var r = n[0],
                a = n[1],
                e = n[2],
                n = n[3],
                u = r + r,
                o = a + a,
                i = e + e,
                r = r * u,
                s = a * u,
                a = a * o,
                c = e * u,
                M = e * o,
                e = e * i,
                u = n * u,
                o = n * o,
                n = n * i; return t[0] = 1 - a - e, t[1] = s + n, t[2] = c - o, t[3] = 0, t[4] = s - n, t[5] = 1 - r - e, t[6] = M + u, t[7] = 0, t[8] = c + o, t[9] = M - u, t[10] = 1 - r - a, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t }, n.frustum = function(t, n, r, a, e, u, o) { var i = 1 / (r - n),
                s = 1 / (e - a),
                c = 1 / (u - o); return t[0] = 2 * u * i, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = 2 * u * s, t[6] = 0, t[7] = 0, t[8] = (r + n) * i, t[9] = (e + a) * s, t[10] = (o + u) * c, t[11] = -1, t[12] = 0, t[13] = 0, t[14] = o * u * 2 * c, t[15] = 0, t }, n.perspective = function(t, n, r, a, e) { var n = 1 / Math.tan(n / 2),
                u = 1 / (a - e); return t[0] = n / r, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = n, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[10] = (e + a) * u, t[11] = -1, t[12] = 0, t[13] = 0, t[14] = 2 * e * a * u, t[15] = 0, t }, n.perspectiveFromFieldOfView = function(t, n, r, a) { var e = Math.tan(n.upDegrees * Math.PI / 180),
                u = Math.tan(n.downDegrees * Math.PI / 180),
                o = Math.tan(n.leftDegrees * Math.PI / 180),
                n = Math.tan(n.rightDegrees * Math.PI / 180),
                i = 2 / (o + n),
                s = 2 / (e + u); return t[0] = i, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = s, t[6] = 0, t[7] = 0, t[8] = -(o - n) * i * .5, t[9] = (e - u) * s * .5, t[10] = a / (r - a), t[11] = -1, t[12] = 0, t[13] = 0, t[14] = a * r / (r - a), t[15] = 0, t }, n.ortho = function(t, n, r, a, e, u, o) { var i = 1 / (n - r),
                s = 1 / (a - e),
                c = 1 / (u - o); return t[0] = -2 * i, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = -2 * s, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[10] = 2 * c, t[11] = 0, t[12] = (n + r) * i, t[13] = (e + a) * s, t[14] = (o + u) * c, t[15] = 1, t }, n.lookAt = function(t, n, r, a) { var e = void 0,
                u = void 0,
                o = void 0,
                i = void 0,
                s = void 0,
                c = void 0,
                M = void 0,
                h = void 0,
                f = void 0,
                l = void 0,
                v = n[0],
                d = n[1],
                n = n[2],
                b = a[0],
                m = a[1],
                a = a[2],
                p = r[0],
                P = r[1],
                r = r[2]; if (Math.abs(v - p) < N.EPSILON && Math.abs(d - P) < N.EPSILON && Math.abs(n - r) < N.EPSILON) return mat4.identity(t);
            M = v - p, h = d - P, f = n - r, l = 1 / Math.sqrt(M * M + h * h + f * f), e = m * (f *= l) - a * (h *= l), u = a * (M *= l) - b * f, o = b * h - m * M, (l = Math.sqrt(e * e + u * u + o * o)) ? (e *= l = 1 / l, u *= l, o *= l) : o = u = e = 0;
            i = h * o - f * u, s = f * e - M * o, c = M * u - h * e, (l = Math.sqrt(i * i + s * s + c * c)) ? (i *= l = 1 / l, s *= l, c *= l) : c = s = i = 0; return t[0] = e, t[1] = i, t[2] = M, t[3] = 0, t[4] = u, t[5] = s, t[6] = h, t[7] = 0, t[8] = o, t[9] = c, t[10] = f, t[11] = 0, t[12] = -(e * v + u * d + o * n), t[13] = -(i * v + s * d + c * n), t[14] = -(M * v + h * d + f * n), t[15] = 1, t }, n.targetTo = function(t, n, r, a) { var e = n[0],
                u = n[1],
                n = n[2],
                o = a[0],
                i = a[1],
                a = a[2],
                s = e - r[0],
                c = u - r[1],
                r = n - r[2],
                M = s * s + c * c + r * r;
            0 < M && (M = 1 / Math.sqrt(M), s *= M, c *= M, r *= M);
            M = i * r - a * c, a = a * s - o * r, o = o * c - i * s; return t[0] = M, t[1] = a, t[2] = o, t[3] = 0, t[4] = c * o - r * a, t[5] = r * M - s * o, t[6] = s * a - c * M, t[7] = 0, t[8] = s, t[9] = c, t[10] = r, t[11] = 0, t[12] = e, t[13] = u, t[14] = n, t[15] = 1, t }, n.str = function(t) { return "mat4(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ", " + t[4] + ", " + t[5] + ", " + t[6] + ", " + t[7] + ", " + t[8] + ", " + t[9] + ", " + t[10] + ", " + t[11] + ", " + t[12] + ", " + t[13] + ", " + t[14] + ", " + t[15] + ")" }, n.frob = function(t) { return Math.sqrt(Math.pow(t[0], 2) + Math.pow(t[1], 2) + Math.pow(t[2], 2) + Math.pow(t[3], 2) + Math.pow(t[4], 2) + Math.pow(t[5], 2) + Math.pow(t[6], 2) + Math.pow(t[7], 2) + Math.pow(t[8], 2) + Math.pow(t[9], 2) + Math.pow(t[10], 2) + Math.pow(t[11], 2) + Math.pow(t[12], 2) + Math.pow(t[13], 2) + Math.pow(t[14], 2) + Math.pow(t[15], 2)) }, n.add = function(t, n, r) { return t[0] = n[0] + r[0], t[1] = n[1] + r[1], t[2] = n[2] + r[2], t[3] = n[3] + r[3], t[4] = n[4] + r[4], t[5] = n[5] + r[5], t[6] = n[6] + r[6], t[7] = n[7] + r[7], t[8] = n[8] + r[8], t[9] = n[9] + r[9], t[10] = n[10] + r[10], t[11] = n[11] + r[11], t[12] = n[12] + r[12], t[13] = n[13] + r[13], t[14] = n[14] + r[14], t[15] = n[15] + r[15], t }, n.subtract = e, n.multiplyScalar = function(t, n, r) { return t[0] = n[0] * r, t[1] = n[1] * r, t[2] = n[2] * r, t[3] = n[3] * r, t[4] = n[4] * r, t[5] = n[5] * r, t[6] = n[6] * r, t[7] = n[7] * r, t[8] = n[8] * r, t[9] = n[9] * r, t[10] = n[10] * r, t[11] = n[11] * r, t[12] = n[12] * r, t[13] = n[13] * r, t[14] = n[14] * r, t[15] = n[15] * r, t }, n.multiplyScalarAndAdd = function(t, n, r, a) { return t[0] = n[0] + r[0] * a, t[1] = n[1] + r[1] * a, t[2] = n[2] + r[2] * a, t[3] = n[3] + r[3] * a, t[4] = n[4] + r[4] * a, t[5] = n[5] + r[5] * a, t[6] = n[6] + r[6] * a, t[7] = n[7] + r[7] * a, t[8] = n[8] + r[8] * a, t[9] = n[9] + r[9] * a, t[10] = n[10] + r[10] * a, t[11] = n[11] + r[11] * a, t[12] = n[12] + r[12] * a, t[13] = n[13] + r[13] * a, t[14] = n[14] + r[14] * a, t[15] = n[15] + r[15] * a, t }, n.exactEquals = function(t, n) { return t[0] === n[0] && t[1] === n[1] && t[2] === n[2] && t[3] === n[3] && t[4] === n[4] && t[5] === n[5] && t[6] === n[6] && t[7] === n[7] && t[8] === n[8] && t[9] === n[9] && t[10] === n[10] && t[11] === n[11] && t[12] === n[12] && t[13] === n[13] && t[14] === n[14] && t[15] === n[15] }, n.equals = function(t, n) { var r = t[0],
                a = t[1],
                e = t[2],
                u = t[3],
                o = t[4],
                i = t[5],
                s = t[6],
                c = t[7],
                M = t[8],
                h = t[9],
                f = t[10],
                l = t[11],
                v = t[12],
                d = t[13],
                b = t[14],
                t = t[15],
                m = n[0],
                p = n[1],
                P = n[2],
                E = n[3],
                O = n[4],
                x = n[5],
                A = n[6],
                q = n[7],
                y = n[8],
                w = n[9],
                R = n[10],
                L = n[11],
                S = n[12],
                _ = n[13],
                I = n[14],
                n = n[15]; return Math.abs(r - m) <= N.EPSILON * Math.max(1, Math.abs(r), Math.abs(m)) && Math.abs(a - p) <= N.EPSILON * Math.max(1, Math.abs(a), Math.abs(p)) && Math.abs(e - P) <= N.EPSILON * Math.max(1, Math.abs(e), Math.abs(P)) && Math.abs(u - E) <= N.EPSILON * Math.max(1, Math.abs(u), Math.abs(E)) && Math.abs(o - O) <= N.EPSILON * Math.max(1, Math.abs(o), Math.abs(O)) && Math.abs(i - x) <= N.EPSILON * Math.max(1, Math.abs(i), Math.abs(x)) && Math.abs(s - A) <= N.EPSILON * Math.max(1, Math.abs(s), Math.abs(A)) && Math.abs(c - q) <= N.EPSILON * Math.max(1, Math.abs(c), Math.abs(q)) && Math.abs(M - y) <= N.EPSILON * Math.max(1, Math.abs(M), Math.abs(y)) && Math.abs(h - w) <= N.EPSILON * Math.max(1, Math.abs(h), Math.abs(w)) && Math.abs(f - R) <= N.EPSILON * Math.max(1, Math.abs(f), Math.abs(R)) && Math.abs(l - L) <= N.EPSILON * Math.max(1, Math.abs(l), Math.abs(L)) && Math.abs(v - S) <= N.EPSILON * Math.max(1, Math.abs(v), Math.abs(S)) && Math.abs(d - _) <= N.EPSILON * Math.max(1, Math.abs(d), Math.abs(_)) && Math.abs(b - I) <= N.EPSILON * Math.max(1, Math.abs(b), Math.abs(I)) && Math.abs(t - n) <= N.EPSILON * Math.max(1, Math.abs(t), Math.abs(n)) }; var N = function(t) {
            { if (t && t.__esModule) return t; var n = {}; if (null != t)
                    for (var r in t) Object.prototype.hasOwnProperty.call(t, r) && (n[r] = t[r]); return n.default = t, n } }(r(0));

        function a(t, n, r) { var a = n[0],
                e = n[1],
                u = n[2],
                o = n[3],
                i = n[4],
                s = n[5],
                c = n[6],
                M = n[7],
                h = n[8],
                f = n[9],
                l = n[10],
                v = n[11],
                d = n[12],
                b = n[13],
                m = n[14],
                n = n[15],
                p = r[0],
                P = r[1],
                E = r[2],
                O = r[3]; return t[0] = p * a + P * i + E * h + O * d, t[1] = p * e + P * s + E * f + O * b, t[2] = p * u + P * c + E * l + O * m, t[3] = p * o + P * M + E * v + O * n, t[4] = (p = r[4]) * a + (P = r[5]) * i + (E = r[6]) * h + (O = r[7]) * d, t[5] = p * e + P * s + E * f + O * b, t[6] = p * u + P * c + E * l + O * m, t[7] = p * o + P * M + E * v + O * n, t[8] = (p = r[8]) * a + (P = r[9]) * i + (E = r[10]) * h + (O = r[11]) * d, t[9] = p * e + P * s + E * f + O * b, t[10] = p * u + P * c + E * l + O * m, t[11] = p * o + P * M + E * v + O * n, t[12] = (p = r[12]) * a + (P = r[13]) * i + (E = r[14]) * h + (O = r[15]) * d, t[13] = p * e + P * s + E * f + O * b, t[14] = p * u + P * c + E * l + O * m, t[15] = p * o + P * M + E * v + O * n, t }

        function e(t, n, r) { return t[0] = n[0] - r[0], t[1] = n[1] - r[1], t[2] = n[2] - r[2], t[3] = n[3] - r[3], t[4] = n[4] - r[4], t[5] = n[5] - r[5], t[6] = n[6] - r[6], t[7] = n[7] - r[7], t[8] = n[8] - r[8], t[9] = n[9] - r[9], t[10] = n[10] - r[10], t[11] = n[11] - r[11], t[12] = n[12] - r[12], t[13] = n[13] - r[13], t[14] = n[14] - r[14], t[15] = n[15] - r[15], t }
        n.mul = a, n.sub = e }, function(t, n, r) { "use strict";
        Object.defineProperty(n, "__esModule", { value: !0 }), n.setAxes = n.sqlerp = n.rotationTo = n.equals = n.exactEquals = n.normalize = n.sqrLen = n.squaredLength = n.len = n.length = n.lerp = n.dot = n.scale = n.mul = n.add = n.set = n.copy = n.fromValues = n.clone = void 0, n.create = i, n.identity = function(t) { return t[0] = 0, t[1] = 0, t[2] = 0, t[3] = 1, t }, n.setAxisAngle = s, n.getAxisAngle = function(t, n) { var r = 2 * Math.acos(n[3]),
                a = Math.sin(r / 2);
            0 != a ? (t[0] = n[0] / a, t[1] = n[1] / a, t[2] = n[2] / a) : (t[0] = 1, t[1] = 0, t[2] = 0); return r }, n.multiply = c, n.rotateX = function(t, n, r) { r *= .5; var a = n[0],
                e = n[1],
                u = n[2],
                n = n[3],
                o = Math.sin(r),
                r = Math.cos(r); return t[0] = a * r + n * o, t[1] = e * r + u * o, t[2] = u * r - e * o, t[3] = n * r - a * o, t }, n.rotateY = function(t, n, r) { r *= .5; var a = n[0],
                e = n[1],
                u = n[2],
                n = n[3],
                o = Math.sin(r),
                r = Math.cos(r); return t[0] = a * r - u * o, t[1] = e * r + n * o, t[2] = u * r + a * o, t[3] = n * r - e * o, t }, n.rotateZ = function(t, n, r) { r *= .5; var a = n[0],
                e = n[1],
                u = n[2],
                n = n[3],
                o = Math.sin(r),
                r = Math.cos(r); return t[0] = a * r + e * o, t[1] = e * r - a * o, t[2] = u * r + n * o, t[3] = n * r - u * o, t }, n.calculateW = function(t, n) { var r = n[0],
                a = n[1],
                n = n[2]; return t[0] = r, t[1] = a, t[2] = n, t[3] = Math.sqrt(Math.abs(1 - r * r - a * a - n * n)), t }, n.slerp = M, n.invert = function(t, n) { var r = n[0],
                a = n[1],
                e = n[2],
                n = n[3],
                u = r * r + a * a + e * e + n * n,
                u = u ? 1 / u : 0; return t[0] = -r * u, t[1] = -a * u, t[2] = -e * u, t[3] = n * u, t }, n.conjugate = function(t, n) { return t[0] = -n[0], t[1] = -n[1], t[2] = -n[2], t[3] = n[3], t }, n.fromMat3 = h, n.fromEuler = function(t, n, r, a) { var e = .5 * Math.PI / 180,
                e = (r *= e, a *= e, Math.sin(n *= e)),
                n = Math.cos(n),
                u = Math.sin(r),
                r = Math.cos(r),
                o = Math.sin(a),
                a = Math.cos(a); return t[0] = e * r * a - n * u * o, t[1] = n * u * a + e * r * o, t[2] = n * r * o - e * u * a, t[3] = n * r * a + e * u * o, t }, n.str = function(t) { return "quat(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ")" }; var a = o(r(0)),
            e = o(r(1)),
            u = o(r(2)),
            r = o(r(3));

        function o(t) { if (t && t.__esModule) return t; var n = {}; if (null != t)
                for (var r in t) Object.prototype.hasOwnProperty.call(t, r) && (n[r] = t[r]); return n.default = t, n }

        function i() { var t = new a.ARRAY_TYPE(4); return t[0] = 0, t[1] = 0, t[2] = 0, t[3] = 1, t }

        function s(t, n, r) { r *= .5; var a = Math.sin(r); return t[0] = a * n[0], t[1] = a * n[1], t[2] = a * n[2], t[3] = Math.cos(r), t }

        function c(t, n, r) { var a = n[0],
                e = n[1],
                u = n[2],
                n = n[3],
                o = r[0],
                i = r[1],
                s = r[2],
                r = r[3]; return t[0] = a * r + n * o + e * s - u * i, t[1] = e * r + n * i + u * o - a * s, t[2] = u * r + n * s + a * i - e * o, t[3] = n * r - a * o - e * i - u * s, t }

        function M(t, n, r, a) { var e, u = n[0],
                o = n[1],
                i = n[2],
                n = n[3],
                s = r[0],
                c = r[1],
                M = r[2],
                r = r[3],
                h = void 0,
                f = void 0,
                l = void 0; return (h = u * s + o * c + i * M + n * r) < 0 && (h = -h, s = -s, c = -c, M = -M, r = -r), l = 1e-6 < 1 - h ? (h = Math.acos(h), e = Math.sin(h), f = Math.sin((1 - a) * h) / e, Math.sin(a * h) / e) : (f = 1 - a, a), t[0] = f * u + l * s, t[1] = f * o + l * c, t[2] = f * i + l * M, t[3] = f * n + l * r, t }

        function h(t, n) { var r, a, e = n[0] + n[4] + n[8],
                u = void 0; return 0 < e ? (u = Math.sqrt(e + 1), t[3] = .5 * u, t[0] = (n[5] - n[7]) * (u = .5 / u), t[1] = (n[6] - n[2]) * u, t[2] = (n[1] - n[3]) * u) : (r = ((e = n[3 * (e = n[0] < n[4] ? 1 : 0) + e] < n[8] ? 2 : e) + 1) % 3, a = (e + 2) % 3, u = Math.sqrt(n[3 * e + e] - n[3 * r + r] - n[3 * a + a] + 1), t[e] = .5 * u, t[3] = (n[3 * r + a] - n[3 * a + r]) * (u = .5 / u), t[r] = (n[3 * r + e] + n[3 * e + r]) * u, t[a] = (n[3 * a + e] + n[3 * e + a]) * u), t }
        n.clone = r.clone, n.fromValues = r.fromValues, n.copy = r.copy, n.set = r.set, n.add = r.add, n.mul = c, n.scale = r.scale, n.dot = r.dot, n.lerp = r.lerp; var f, l, v, d, b, m, p = n.length = r.length,
            p = (n.len = p, n.squaredLength = r.squaredLength),
            P = (n.sqrLen = p, n.normalize = r.normalize);
        n.exactEquals = r.exactEquals, n.equals = r.equals, n.rotationTo = (f = u.create(), l = u.fromValues(1, 0, 0), v = u.fromValues(0, 1, 0), function(t, n, r) { var a = u.dot(n, r); return a < -.999999 ? (u.cross(f, l, n), u.len(f) < 1e-6 && u.cross(f, v, n), u.normalize(f, f), s(t, f, Math.PI), t) : .999999 < a ? (t[0] = 0, t[1] = 0, t[2] = 0, t[3] = 1, t) : (u.cross(f, n, r), t[0] = f[0], t[1] = f[1], t[2] = f[2], t[3] = 1 + a, P(t, t)) }), n.sqlerp = (d = i(), b = i(), function(t, n, r, a, e, u) { return M(d, n, e, u), M(b, r, a, u), M(t, d, b, 2 * u * (1 - u)), t }), n.setAxes = (m = e.create(), function(t, n, r, a) { return m[0] = r[0], m[3] = r[1], m[6] = r[2], m[1] = a[0], m[4] = a[1], m[7] = a[2], m[2] = -n[0], m[5] = -n[1], m[8] = -n[2], P(t, h(t, m)) }) }, function(t, n, r) { "use strict";
        Object.defineProperty(n, "__esModule", { value: !0 }), n.forEach = n.sqrLen = n.sqrDist = n.dist = n.div = n.mul = n.sub = n.len = void 0, n.create = a, n.clone = function(t) { var n = new e.ARRAY_TYPE(2); return n[0] = t[0], n[1] = t[1], n }, n.fromValues = function(t, n) { var r = new e.ARRAY_TYPE(2); return r[0] = t, r[1] = n, r }, n.copy = function(t, n) { return t[0] = n[0], t[1] = n[1], t }, n.set = function(t, n, r) { return t[0] = n, t[1] = r, t }, n.add = function(t, n, r) { return t[0] = n[0] + r[0], t[1] = n[1] + r[1], t }, n.subtract = u, n.multiply = o, n.divide = i, n.ceil = function(t, n) { return t[0] = Math.ceil(n[0]), t[1] = Math.ceil(n[1]), t }, n.floor = function(t, n) { return t[0] = Math.floor(n[0]), t[1] = Math.floor(n[1]), t }, n.min = function(t, n, r) { return t[0] = Math.min(n[0], r[0]), t[1] = Math.min(n[1], r[1]), t }, n.max = function(t, n, r) { return t[0] = Math.max(n[0], r[0]), t[1] = Math.max(n[1], r[1]), t }, n.round = function(t, n) { return t[0] = Math.round(n[0]), t[1] = Math.round(n[1]), t }, n.scale = function(t, n, r) { return t[0] = n[0] * r, t[1] = n[1] * r, t }, n.scaleAndAdd = function(t, n, r, a) { return t[0] = n[0] + r[0] * a, t[1] = n[1] + r[1] * a, t }, n.distance = s, n.squaredDistance = c, n.length = M, n.squaredLength = h, n.negate = function(t, n) { return t[0] = -n[0], t[1] = -n[1], t }, n.inverse = function(t, n) { return t[0] = 1 / n[0], t[1] = 1 / n[1], t }, n.normalize = function(t, n) { var r = n[0],
                a = n[1],
                r = r * r + a * a;
            0 < r && (r = 1 / Math.sqrt(r), t[0] = n[0] * r, t[1] = n[1] * r); return t }, n.dot = function(t, n) { return t[0] * n[0] + t[1] * n[1] }, n.cross = function(t, n, r) { n = n[0] * r[1] - n[1] * r[0]; return t[0] = t[1] = 0, t[2] = n, t }, n.lerp = function(t, n, r, a) { var e = n[0],
                n = n[1]; return t[0] = e + a * (r[0] - e), t[1] = n + a * (r[1] - n), t }, n.random = function(t, n) { n = n || 1; var r = 2 * e.RANDOM() * Math.PI; return t[0] = Math.cos(r) * n, t[1] = Math.sin(r) * n, t }, n.transformMat2 = function(t, n, r) { var a = n[0],
                n = n[1]; return t[0] = r[0] * a + r[2] * n, t[1] = r[1] * a + r[3] * n, t }, n.transformMat2d = function(t, n, r) { var a = n[0],
                n = n[1]; return t[0] = r[0] * a + r[2] * n + r[4], t[1] = r[1] * a + r[3] * n + r[5], t }, n.transformMat3 = function(t, n, r) { var a = n[0],
                n = n[1]; return t[0] = r[0] * a + r[3] * n + r[6], t[1] = r[1] * a + r[4] * n + r[7], t }, n.transformMat4 = function(t, n, r) { var a = n[0],
                n = n[1]; return t[0] = r[0] * a + r[4] * n + r[12], t[1] = r[1] * a + r[5] * n + r[13], t }, n.str = function(t) { return "vec2(" + t[0] + ", " + t[1] + ")" }, n.exactEquals = function(t, n) { return t[0] === n[0] && t[1] === n[1] }, n.equals = function(t, n) { var r = t[0],
                t = t[1],
                a = n[0],
                n = n[1]; return Math.abs(r - a) <= e.EPSILON * Math.max(1, Math.abs(r), Math.abs(a)) && Math.abs(t - n) <= e.EPSILON * Math.max(1, Math.abs(t), Math.abs(n)) }; var e = function(t) {
            { if (t && t.__esModule) return t; var n = {}; if (null != t)
                    for (var r in t) Object.prototype.hasOwnProperty.call(t, r) && (n[r] = t[r]); return n.default = t, n } }(r(0));

        function a() { var t = new e.ARRAY_TYPE(2); return t[0] = 0, t[1] = 0, t }

        function u(t, n, r) { return t[0] = n[0] - r[0], t[1] = n[1] - r[1], t }

        function o(t, n, r) { return t[0] = n[0] * r[0], t[1] = n[1] * r[1], t }

        function i(t, n, r) { return t[0] = n[0] / r[0], t[1] = n[1] / r[1], t }

        function s(t, n) { var r = n[0] - t[0],
                n = n[1] - t[1]; return Math.sqrt(r * r + n * n) }

        function c(t, n) { var r = n[0] - t[0],
                n = n[1] - t[1]; return r * r + n * n }

        function M(t) { var n = t[0],
                t = t[1]; return Math.sqrt(n * n + t * t) }

        function h(t) { var n = t[0],
                t = t[1]; return n * n + t * t } var f;
        n.len = M, n.sub = u, n.mul = o, n.div = i, n.dist = s, n.sqrDist = c, n.sqrLen = h, n.forEach = (f = a(), function(t, n, r, a, e, u) { var o = void 0,
                i = void 0; for (n = n || 2, r = r || 0, i = a ? Math.min(a * n + r, t.length) : t.length, o = r; o < i; o += n) f[0] = t[o], f[1] = t[o + 1], e(f, f, u), t[o] = f[0], t[o + 1] = f[1]; return t }) }], e = {}, a.m = r, a.c = e, a.d = function(t, n, r) { a.o(t, n) || Object.defineProperty(t, n, { configurable: !1, enumerable: !0, get: r }) }, a.n = function(t) { var n = t && t.__esModule ? function() { return t.default } : function() { return t }; return a.d(n, "a", n), n }, a.o = function(t, n) { return Object.prototype.hasOwnProperty.call(t, n) }, a.p = "", a(a.s = 4);

    function a(t) { var n; return (e[t] || (n = e[t] = { i: t, l: !1, exports: {} }, r[t].call(n.exports, n, n.exports, a), n.l = !0, n)).exports } var r, e });